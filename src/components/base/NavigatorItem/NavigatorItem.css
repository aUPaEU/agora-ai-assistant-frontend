/* WRAPPER */
.agora-navigator-item-wrapper {
    transition: 300ms;
}

/* TYPES */
.label {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
}

/* Acceleration Service */
.acceleration-service .label {
    background-color: var(--acceleration-service-color);
}

.acceleration-service .label.hover {
    color: color-mix(in srgb, var(--acceleration-service-color) 75%, black);
    background-color: color-mix(in srgb, var(--acceleration-service-color) 10%, white);
}

.acceleration-service .label.hover > span {
    color: color-mix(in srgb, var(--acceleration-service-color) 75%, black);
}

.acceleration-service .type-icon {
    color: var(--primary-color);
    background-color: rgb(from var(--acceleration-service-color) r g b / 0.75);
}

/* Service */
.service .label {
    background-color: var(--service-color);
}

.service .label.hover {
    color: color-mix(in srgb, var(--service-color) 75%, black);
    background-color: color-mix(in srgb, var(--service-color) 10%, white);
}

.service .label.hover > span {
    color: color-mix(in srgb, var(--service-color) 75%, black);
}

.service .type-icon {
    color: var(--primary-color);
    background-color: rgb(from var(--service-color) r g b / 0.75);
}

/* Catalogue */
.catalogue .label {
    background-color: var(--catalogue-color);
}

.catalogue .label.hover {
    color: color-mix(in srgb, var(--catalogue-color) 75%, black);
    background-color: color-mix(in srgb, var(--catalogue-color) 10%, white);
}

.catalogue .label.hover > span {
    color: color-mix(in srgb, var(--catalogue-color) 75%, black);
}

.catalogue .type-icon {
    color: var(--primary-color);
    background-color: rgb(from var(--catalogue-color) r g b / 0.75);
}

/* Showcase */
.showcase .label {
    background-color: var(--showcase-color);
}

.showcase .label.hover {
    color: color-mix(in srgb, var(--showcase-color) 75%, black);
    background-color: color-mix(in srgb, var(--showcase-color) 10%, white);
}

.showcase .label.hover > span {
    color: color-mix(in srgb, var(--showcase-color) 75%, black);
}

.showcase .type-icon {
    color: var(--primary-color);
    background-color: rgb(from var(--showcase-color) r g b / 0.5);
}

.item:not(.has-showcase) {
    /* background-color: red; */
}

/* ITEM */
.item {
    cursor: pointer;

    /* height: 65px; */
    width: 100%;

    display: flex;
    align-items: stretch;
    gap: 0.25rem;

    border-radius: 5pt;

    background-color: transparent;

    /* overflow: hidden; */

    position: relative;

    transition: 300ms;
}

.description {
    opacity: 0;
    pointer-events: none;

    position: absolute;
    bottom: 0;
    right: 0;

    width: 100%;

    padding: 1.5rem;
    box-sizing: border-box;

    display: flex;
    justify-content: flex-start;
    align-items: flex-start;

    transform: translateY(50%);

    border: 1px solid var(--primary-color);
    border-radius: 5pt;

    color: var(--text-secondary-color);
    font-size: 0.8rem;

    background-color: var(--bg-color);

    box-shadow: 0px 15px 30px rgba(0, 0, 0, 0.15);

    z-index: -5;

    transition: 300ms;
}

.submenu {
    margin-bottom: 0;

    display: flex;
    flex-direction: column;
    justify-content: start;
    align-items: stretch;
    gap: 1rem;

    border-left: 2px solid lightgray;
}

.submenu:empty {
    display: none;
}

/* LABEL */
.label {
    cursor: default;
    user-select: none;
    
    flex: 1;

    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: start;
    gap: 0.2rem;

    text-decoration: none;

    /* background-color: var(--text-accent-color); */
    background-color: white !important;
}

.label-content {
    position: relative;
    height: 100%;
    
    padding: 1rem;
    box-sizing: border-box;

    width: 100%;

    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: start;
    gap: 0.5rem;
}

.label-title {
    width: 100%;

    text-wrap: pretty;

    color: var(--primary-color);
    font-size: 0.9rem;
    font-weight: bold;
}

.acceleration-service .label-title {
    color: var(--acceleration-service-color);
}

.service .label-title {
    color: var(--service-color);
}

.catalogue .label-title {
    color: var(--catalogue-color);
}

.label-subtitle {
    width: 100%;

    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 0.2rem;

    /* color: var(--bg-color); */
    color: var(--text-tertiary-color);
    font-size: 0.7rem;
}

.item.has-showcase .label {
    cursor: pointer;
}

.label.hover {
    position: absolute;
    top: 0;
    left: 0;

    padding: 1rem;
    padding-left: 2rem;
    box-sizing: border-box;

    width: 0%;
    height: 100%;

    opacity: 0;

    overflow: hidden;

    text-wrap: pretty;

    color: var(--primary-color);
    font-size: 0.9rem;
    font-weight: bold;

    color: var(--text-accent-color);

    white-space: nowrap;

    transition: 300ms;
}

.label.hover span {
    color: var(--text-accent-color);
    font-size: 0.7rem;
}

/* ACTION ICON */
.actions {
    display: flex;
    flex-direction: column;
    justify-content: stretch;
    align-items: center;
    gap: 0.25rem;
}

.actions:has(> .info-icon + .selection-icon) {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 2fr 1fr;
}

.actions:has(> .info-icon + .selection-icon) > .info-icon {
    height: 100%;
}

.actions:has(> .info-icon:hover) + .description {
    opacity: 1;
    transform: translateY(calc(100% + 0.5rem));
    z-index: 100;
}

.info-icon,
.showcase-icon,
.selection-icon,
.unfold-icon {
    flex: 1;

    padding: 0.5rem;
    box-sizing: border-box;

    display: grid;
    place-content: center;

    background-color: rgb(from var(--primary-color) r g b / 0.5);
    backdrop-filter: blur(10px);

    color: var(--text-accent-color);

    transition: 300ms;
}

.showcase-icon {
    position: absolute;
    top: 0;
    right: 0;
}

.type-icon {
    cursor: default;
    aspect-ratio: 1;

    padding: 1rem;
    box-sizing: border-box;

    display: grid;
    place-content: center;

    backdrop-filter: blur(10px);

    /* border-top-left-radius: 5pt;
    border-bottom-left-radius: 5pt; */

    transition: 300ms;
}

.unfold-icon svg {
    height: 16px;
    width: 16px;
    color: var(--text-accent-color);
}

.info-icon svg {
    height: 16px;
    width: 16px;
    color: var(--text-accent-color);
}

.showcase-icon svg {
    top: 0;
    right: 0;

    height: 16px;
    width: 16px;
    color: var(--text-accent-color);
}

.selection-icon svg {
    height: 16px;
    width: 16px;
    color: var(--text-accent-color);
}

.selection-icon::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    width: 10px;
    height: 10px;

    background-color: rgb(from var(--text-accent-color) r g b / 0);

    opacity: 0.5;
    transition: 300ms;
}

.type-icon.unselected {
    background-color: rgb(from var(--text-tertiary-color) r g b / 0.3) !important;
}

.type-icon:has(+ .label + .label.hover + .actions  > .unselectable) {
    background-color: rgb(from var(--text-tertiary-color) r g b / 0.3);
}

/* HOVER */
.item.has-showcase:hover {
    box-shadow: 0px 15px 30px rgba(0, 0, 0, 0.15);
}

.item.has-showcase:hover .label.hover {
    opacity: 1;
    width: 100%;
}

.info-icon:hover,
.showcase-icon:hover,
.selection-icon:hover,
.unfold-icon:hover {
    background-color: var(--primary-color);
}

.info-icon:hover {
    cursor: help; 
}

.unfold-icon:hover svg {
    animation-name: spin;
    animation-duration: 500ms;
    animation-timing-function: ease-in-out;
    animation-fill-mode: forwards;
}

.selection-icon:hover::after {
    background-color: rgb(from var(--text-accent-color) r g b / 0.65);
}

.selection-icon.unselectable {
    pointer-events: none;
}

.selection-icon.unselectable svg {
    color: var(--text-tertiary-color);
    opacity: 0.2;
}

/* HIGHLIGHT */
.highlight {
    transform: translateX(20px);
}

.highlight .type-icon {
    color: var(--text-accent-color);
    background-color: var(--primary-color);
}

/* ANIMATIONS */
@keyframes spin {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(180deg);
    }
}

/* RESPONSIVE */
@media (max-width: 1000px) {
    .info-icon,
    .showcase-icon,
    .unfold-icon {
        background-color: var(--bg-color);
    }

    .label {
        font-size: 0.8rem;
    }
}